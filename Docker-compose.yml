version: '3.8'

services:
  db:
    image: postgres:15
    container_name: postgres-db
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_DB=ecommerce-db
      - POSTGRES_USER=ecommerce_user
      - POSTGRES_PASSWORD=passwordwanda12345
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-sonarqube-db.sh:/docker-entrypoint-initdb.d/init-sonarqube-db.sh

  redis:
    image: redis:7.0-alpine
    container_name: redis-ecommerce
    ports:
      - "6390:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data
    restart: always
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    depends_on:
      - db

volumes:
  postgres_data:
  redis-data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  elasticsearch_data:
